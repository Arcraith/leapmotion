// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace LeapDB {
    using Invert.Json;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using UniRx;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    [uFrame.Attributes.ComponentId(34)]
    [uFrame.Attributes.uFrameIdentifier("757da464-14a7-4d4b-a493-749ab2a74444")]
    public partial class ExcerciseManagerComponent : uFrame.ECS.EcsComponent {
        
        [UnityEngine.SerializeField()]
        private Int32 _maxExcercise;
        
        [UnityEngine.SerializeField()]
        private Int32 _maxTime;
        
        [UnityEngine.SerializeField()]
        private Int32 _excerciseNr;
        
        [UnityEngine.SerializeField()]
        private Transform _Tick;
        
        [UnityEngine.SerializeField()]
        private Transform _LoadingBar;
        
        [UnityEngine.SerializeField()]
        private Text _text;
        
        [UnityEngine.SerializeField()]
        private Text _title;
        
        private Subject<PropertyChangedEvent<Int32>> _maxExcerciseObservable;
        
        private PropertyChangedEvent<Int32> _maxExcerciseEvent;
        
        private Subject<PropertyChangedEvent<Int32>> _maxTimeObservable;
        
        private PropertyChangedEvent<Int32> _maxTimeEvent;
        
        private Subject<PropertyChangedEvent<Int32>> _excerciseNrObservable;
        
        private PropertyChangedEvent<Int32> _excerciseNrEvent;
        
        private Subject<PropertyChangedEvent<Transform>> _TickObservable;
        
        private PropertyChangedEvent<Transform> _TickEvent;
        
        private Subject<PropertyChangedEvent<Transform>> _LoadingBarObservable;
        
        private PropertyChangedEvent<Transform> _LoadingBarEvent;
        
        private Subject<PropertyChangedEvent<Text>> _textObservable;
        
        private PropertyChangedEvent<Text> _textEvent;
        
        private Subject<PropertyChangedEvent<Text>> _titleObservable;
        
        private PropertyChangedEvent<Text> _titleEvent;
        
        public override int ComponentId {
            get {
                return 34;
            }
        }
        
        public IObservable<PropertyChangedEvent<Int32>> maxExcerciseObservable {
            get {
                return _maxExcerciseObservable ?? (_maxExcerciseObservable = new Subject<PropertyChangedEvent<Int32>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Int32>> maxTimeObservable {
            get {
                return _maxTimeObservable ?? (_maxTimeObservable = new Subject<PropertyChangedEvent<Int32>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Int32>> excerciseNrObservable {
            get {
                return _excerciseNrObservable ?? (_excerciseNrObservable = new Subject<PropertyChangedEvent<Int32>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Transform>> TickObservable {
            get {
                return _TickObservable ?? (_TickObservable = new Subject<PropertyChangedEvent<Transform>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Transform>> LoadingBarObservable {
            get {
                return _LoadingBarObservable ?? (_LoadingBarObservable = new Subject<PropertyChangedEvent<Transform>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Text>> textObservable {
            get {
                return _textObservable ?? (_textObservable = new Subject<PropertyChangedEvent<Text>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Text>> titleObservable {
            get {
                return _titleObservable ?? (_titleObservable = new Subject<PropertyChangedEvent<Text>>());
            }
        }
        
        public Int32 maxExcercise {
            get {
                return _maxExcercise;
            }
            set {
                SetmaxExcercise(value);
            }
        }
        
        public Int32 maxTime {
            get {
                return _maxTime;
            }
            set {
                SetmaxTime(value);
            }
        }
        
        public Int32 excerciseNr {
            get {
                return _excerciseNr;
            }
            set {
                SetexcerciseNr(value);
            }
        }
        
        public Transform Tick {
            get {
                return _Tick;
            }
            set {
                SetTick(value);
            }
        }
        
        public Transform LoadingBar {
            get {
                return _LoadingBar;
            }
            set {
                SetLoadingBar(value);
            }
        }
        
        public Text text {
            get {
                return _text;
            }
            set {
                Settext(value);
            }
        }
        
        public Text title {
            get {
                return _title;
            }
            set {
                Settitle(value);
            }
        }
        
        public virtual void SetmaxExcercise(Int32 value) {
            SetProperty(ref _maxExcercise, value, ref _maxExcerciseEvent, _maxExcerciseObservable);
        }
        
        public virtual void SetmaxTime(Int32 value) {
            SetProperty(ref _maxTime, value, ref _maxTimeEvent, _maxTimeObservable);
        }
        
        public virtual void SetexcerciseNr(Int32 value) {
            SetProperty(ref _excerciseNr, value, ref _excerciseNrEvent, _excerciseNrObservable);
        }
        
        public virtual void SetTick(Transform value) {
            SetProperty(ref _Tick, value, ref _TickEvent, _TickObservable);
        }
        
        public virtual void SetLoadingBar(Transform value) {
            SetProperty(ref _LoadingBar, value, ref _LoadingBarEvent, _LoadingBarObservable);
        }
        
        public virtual void Settext(Text value) {
            SetProperty(ref _text, value, ref _textEvent, _textObservable);
        }
        
        public virtual void Settitle(Text value) {
            SetProperty(ref _title, value, ref _titleEvent, _titleObservable);
        }
    }
}
