// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace LeapDB {
    using Leap;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using uFrame.Kernel;
    using UnityEngine;
    
    
    public class NumberDetectionSystemUpdateHandler {
        
        public ExcerciseManagerComponent Group;
        
        private uFrame.ECS.ISystemUpdate _Event;
        
        private uFrame.ECS.EcsSystem _System;
        
        private Leap.Frame ActionNode400_Result = default( Leap.Frame );
        
        private Leap.Frame ActionNode401_frame = default( Leap.Frame );
        
        private Leap.Hand ActionNode401_first = default( Leap.Hand );
        
        private Leap.Hand ActionNode401_second = default( Leap.Hand );
        
        private object ActionNode402_toCheck = default( System.Object );
        
        private object ActionNode403_toCheck = default( System.Object );
        
        private object ActionNode404_key = default( System.Object );
        
        private Leap.Hand ActionNode404_leftHand = default( Leap.Hand );
        
        private Leap.Hand ActionNode404_rightHand = default( Leap.Hand );
        
        private int ActionNode407_in = default( System.Int32 );
        
        private float ActionNode407_Result = default( System.Single );
        
        private float ActionNode405_holdingTime = default( System.Single );
        
        private LeapDB.RightAnswer PublishEventNode406_Result = default( LeapDB.RightAnswer );
        
        private UnityEngine.GameObject ActionNode417_obj = default( UnityEngine.GameObject );
        
        private bool ActionNode417_state = default( System.Boolean );
        
        private bool BoolNode418 = true;
        
        private object ActionNode425_message = default( System.Object );
        
        private string StringNode426 = "kinda visible?";
        
        private float ActionNode409_Result = default( System.Single );
        
        private UnityEngine.Transform ActionNode408_loadingBar = default( UnityEngine.Transform );
        
        private float ActionNode408_maxTime = default( System.Single );
        
        private float ActionNode408_delta = default( System.Single );
        
        private UnityEngine.Transform ActionNode411_loadingBar = default( UnityEngine.Transform );
        
        private float ActionNode411_maxTime = default( System.Single );
        
        private int ActionNode413_in = default( System.Int32 );
        
        private int IntNode412 = 0;
        
        private float ActionNode413_Result = default( System.Single );
        
        private float ActionNode411_delta = default( System.Single );
        
        private UnityEngine.GameObject ActionNode419_obj = default( UnityEngine.GameObject );
        
        private bool ActionNode419_state = default( System.Boolean );
        
        private bool BoolNode420 = false;
        
        public uFrame.ECS.ISystemUpdate Event {
            get {
                return _Event;
            }
            set {
                _Event = value;
            }
        }
        
        public uFrame.ECS.EcsSystem System {
            get {
                return _System;
            }
            set {
                _System = value;
            }
        }
        
        public virtual void Execute() {
            // ActionNode
            // Visit FrameUtils.getFrame
            ActionNode400_Result = FrameUtils.getFrame();
            ActionNode401_frame = ActionNode400_Result;
            // ActionNode
            // Visit FrameUtils.getHandsFromFrame
            FrameUtils.getHandsFromFrame(ActionNode401_frame, out ActionNode401_first, out ActionNode401_second);
            ActionNode402_toCheck = ActionNode401_first;
            // ActionNode
            // Visit ConditionsUtils.isNull
            ConditionsUtils.isNull(ActionNode402_toCheck, ActionNode402_yes, ActionNode402_no);
        }
        
        private void ActionNode402_yes() {
        }
        
        private void ActionNode403_yes() {
        }
        
        private void ActionNode405_yes() {
            // ActionNode
            // Visit ExcerciseUtils.breakGesture
            ExcerciseUtils.breakGesture();
            // PublishEventNode
            var PublishEventNode406_Event = new RightAnswer();
            System.Publish(PublishEventNode406_Event);
            PublishEventNode406_Result = PublishEventNode406_Event;
            ActionNode417_obj = Group.Tick.gameObject;
            ActionNode417_state = BoolNode418;
            // ActionNode
            // Visit GameObjectUtils.setActive
            GameObjectUtils.setActive(ActionNode417_obj, ActionNode417_state);
            ActionNode425_message = StringNode426;
            // ActionNode
            // Visit uFrame.Actions.DebugLibrary.LogMessage
            uFrame.Actions.DebugLibrary.LogMessage(ActionNode425_message);
        }
        
        private void ActionNode404_yes() {
            ActionNode407_in = Group.maxTime;
            // ActionNode
            // Visit uFrame.Actions.Converter.IntToFloat
            ActionNode407_Result = uFrame.Actions.Converter.IntToFloat(ActionNode407_in);
            ActionNode405_holdingTime = ActionNode407_Result;
            // ActionNode
            // Visit ExcerciseUtils.SolveCountdown
            ExcerciseUtils.SolveCountdown(ActionNode405_holdingTime, ActionNode405_yes);
            // ActionNode
            // Visit ExcerciseUtils.getTimePassed
            ActionNode409_Result = ExcerciseUtils.getTimePassed();
            ActionNode408_loadingBar = Group.LoadingBar;
            ActionNode408_maxTime = ActionNode407_Result;
            ActionNode408_delta = ActionNode409_Result;
            // ActionNode
            // Visit ExcerciseUtils.fillLoadingBar
            ExcerciseUtils.fillLoadingBar(ActionNode408_loadingBar, ActionNode408_maxTime, ActionNode408_delta);
        }
        
        private void ActionNode404_no() {
            // ActionNode
            // Visit ExcerciseUtils.breakGesture
            ExcerciseUtils.breakGesture();
            ActionNode411_loadingBar = Group.LoadingBar;
            ActionNode411_maxTime = ActionNode407_Result;
            ActionNode413_in = IntNode412;
            // ActionNode
            // Visit uFrame.Actions.Converter.IntToFloat
            ActionNode413_Result = uFrame.Actions.Converter.IntToFloat(ActionNode413_in);
            ActionNode411_delta = ActionNode413_Result;
            // ActionNode
            // Visit ExcerciseUtils.fillLoadingBar
            ExcerciseUtils.fillLoadingBar(ActionNode411_loadingBar, ActionNode411_maxTime, ActionNode411_delta);
            ActionNode419_obj = Group.Tick.gameObject;
            ActionNode419_state = BoolNode420;
            // ActionNode
            // Visit GameObjectUtils.setActive
            GameObjectUtils.setActive(ActionNode419_obj, ActionNode419_state);
        }
        
        private void ActionNode403_no() {
            ActionNode404_key = Group.excerciseNr;
            ActionNode404_leftHand = ActionNode401_first;
            ActionNode404_rightHand = ActionNode401_second;
            // ActionNode
            // Visit ExcerciseUtils.isExcerciseSolved
            ExcerciseUtils.isExcerciseSolved(ActionNode404_key, ActionNode404_leftHand, ActionNode404_rightHand, ActionNode404_yes, ActionNode404_no);
        }
        
        private void ActionNode402_no() {
            ActionNode403_toCheck = ActionNode401_second;
            // ActionNode
            // Visit ConditionsUtils.isNull
            ConditionsUtils.isNull(ActionNode403_toCheck, ActionNode403_yes, ActionNode403_no);
        }
    }
}
